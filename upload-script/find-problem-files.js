#!/usr/bin/env node

import fs from 'fs';

// Leer el estado de la migraci√≥n
const migrationState = JSON.parse(fs.readFileSync('./migration-state.json', 'utf8'));

console.log('üîç Analizando archivos con caracteres especiales...\n');

// Buscar archivos que puedan tener problemas de codificaci√≥n
const problematicFiles = migrationState.processedFiles.filter(filename => {
  return (
    filename.includes(' ') ||      // Espacios
    filename.includes('√±') ||      // √ë
    filename.includes('√°') ||      // Acentos
    filename.includes('√©') ||
    filename.includes('√≠') ||
    filename.includes('√≥') ||
    filename.includes('√∫') ||
    filename.includes('√º') ||
    filename.includes('(') ||      // Par√©ntesis
    filename.includes(')') ||
    filename.includes('[') ||      // Corchetes
    filename.includes(']') ||
    filename.includes('‚Äì') ||      // Guiones especiales
    filename.includes('‚Äî')
  );
});

console.log(`üìä Total de archivos problem√°ticos encontrados: ${problematicFiles.length}`);
console.log(`üìä Total de archivos migrados: ${migrationState.processedFiles.length}\n`);

// Buscar espec√≠ficamente el archivo que est√°s probando
const searchTerm = '50_cosas_que_hay_que_saber_sobre_el_universo';
const matchingFiles = migrationState.processedFiles.filter(filename => 
  filename.toLowerCase().includes(searchTerm.toLowerCase())
);

if (matchingFiles.length > 0) {
  console.log('üéØ Archivos que coinciden con tu b√∫squeda:');
  matchingFiles.forEach((file, index) => {
    console.log(`${index + 1}. "${file}"`);
  });
} else {
  console.log('‚ùå No se encontr√≥ el archivo buscado en la migraci√≥n');
  console.log('üîç Archivos similares (con "universo"):');
  
  const universeFiles = migrationState.processedFiles.filter(filename => 
    filename.toLowerCase().includes('universo')
  );
  
  universeFiles.forEach((file, index) => {
    console.log(`${index + 1}. "${file}"`);
  });
}

console.log('\nüìã Primeros 10 archivos con caracteres especiales:');
problematicFiles.slice(0, 10).forEach((file, index) => {
  console.log(`${index + 1}. "${file}"`);
});

// Buscar por Joanne Baker espec√≠ficamente
const joanneFiles = migrationState.processedFiles.filter(filename => 
  filename.toLowerCase().includes('joanne') && filename.toLowerCase().includes('baker')
);

if (joanneFiles.length > 0) {
  console.log('\nüîç Archivos de Joanne Baker encontrados:');
  joanneFiles.forEach((file, index) => {
    console.log(`${index + 1}. "${file}"`);
  });
} else {
  console.log('\n‚ùå No se encontraron archivos de Joanne Baker');
}